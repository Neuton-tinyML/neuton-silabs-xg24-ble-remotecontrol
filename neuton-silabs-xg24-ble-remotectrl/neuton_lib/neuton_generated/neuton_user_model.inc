/* 2023-07-13T18:07:47Z */

/* ----------------------------------------------------------------------
Copyright (c) 2022-2023 Neuton.AI, Inc.
*
The source code and its binary form are being made available on the following terms:
Redistribution, use, and modification are permitted provided that the following
conditions are met:
*
1. Redistributions of source code and/or its binary form must retain the above copyright notice,
* this list of conditions (and the disclaimer) either in the body of the source code or in
* the documentation and/or other materials provided with the distribution of the binary form, as
applicable.
*
2. The name of the copyright holder may not be used to endorse or promote products derived from this
* source code or its binary form without specific prior written permission of Neuton.AI, Inc.
*
3. Disclaimer. THIS SOURCE CODE AND ITS BINARY FORM ARE PROVIDED BY THE COPYRIGHT HOLDER "AS IS".
* THE COPYRIGHT HOLDER HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
* BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
* PARTICULAR PURPOSE. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE HELD LIABLE
* FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
* SERVICES; LOSS OF USE, DATA, OR PROFITS; INFRINGEMENT OF INTELLECTUAL PROPERTY RIGHTS
* OF THIRD PARTIES; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
* IN ANY WAY OUT OF THE USE OF THIS SOURCE CODE OR ITS BINARY FORM, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
---------------------------------------------------------------------- */


static const neuton_weight_t MODEL_WEIGHTS[] = {
	24560, -4702, -739, -2411, 24571, -1141, -360, 17983, 955, 28367, 31003,
	-7734, -31031, 27094, 23844, -9422, 32763, 32184, 2359, -6684, 29277, -20986,
	19700, 29570, 2930, 32764, -20710, 6924, -31399, 28635, 9026, 14852, 8663,
	-31563, 32766, 15768, -28, -28984, 3595, -9486, 16416, -32768, 25077, 19284,
	11300, -6477, 9208, -24073, -32426, 20465, 17059, 5146, -32768, -23894,
	29312, -8259, 9114, 28669, -32768, 24573, 28669, -8195, -30094, 12404,
	5187, 751, -31952, 32562, 8385, -17418, 22770, 26622, -13283, -25865, 6006,
	11810, 5280, -9419, 23699, 3668, -26672, -27296, 4436, -32768, -29553,
	10441, 12576, 32148, -4568, -31855, 15141, -4162, -29271, 17283, 1607,
	-29287, -4650, 14640, 32746, -30989, -32190, 10107, -24393, 23625, -28878,
	15221, 12750, 32764, -32768, -23248, 15311, -6556, -22030, 731, -8282,
	15201, -18926, 32766, 31766, -9355, -12387, -32768, 0, -10993, 30514, 29834,
	-32754, 103, -32768, 11317, -11304, -32768, 6271, -20827, -31393, 8570,
	-26722, 29508, 29165, 21104, 32744, -19464, -22708, 6131, -20266, 21631,
	-9486, 32763, -8932, 25148, 12782, -32768, -20825, -32627, 25785, -7727,
	-32765, -6693, -32765, -20402, -7258, -14111, -15105, 10779, -18872, 15722,
	15569, 23929, 32764, -28676, -31317, 2553, 31814, 25285, -5641, -15769,
	-15580, -32724, -32768, 15917, -30305, 9998, 2423, -6018, 28157, 28766,
	-32768, -32768, -11270, 248, -5991, -32758, -32768, 15088, -32178, -16720,
	6731, -5055, 16787, 32766, -26707, -6866, -1286, 17307, -32768, -18662,
	-32768, -32768, -3, -23168, 18941, -12255, -32768, 20486, 5114, -32768,
	-5449, -18760, -24564, 14208, 832, -5562, 28399, 14140, 30196, 32382, -32768,
	-24112, -8137, 13613, -32738, 27385, 13969, -17836, -6654, 32764, -27713,
	-6167, -16633, 11640, -7833, 2585, 20583, -17714, -5272, -1945, -32768,
	27060, 13804, -11640, 32762, 7618, -3281, -32284, -7903, 117, 11669, 19612,
	32715, -32768, -4935, -32677, -16453, -2, -2, -32768, -2, -32768, -2, 32764,
	25578, 3715, -22018, 5735, -1602, -13254, -20704, 32765, 14333, 32765,
	26331, -4, -8969, -32058, -979, -11301, 26624, -1895, -32768, -4417, -4661,
	-32768, 10415, -32768, 0, -32768, 1691, 2681, -32766, -15972, -720, -32768,
	-3580, -32768, 200, -26895, 8145, 32696, 9862, 32754, 32053, -31398, 596,
	-32768, -13360, -15699, 24722, 23956, -15905, -21039, -23559, -8529, 15696,
	-32768, -32768, 32764, -32768, 7014, -8468, 10099, 15622, -20953, -28480,
	5988, -19325, 17551, 32347, -22602, -14254, -24155, 13619, -16289, 7187,
	32762, 7286, -20980, -29039, -16388, -32768, -32768, 5422, 4108, 13428,
	-8013, -12428, 18588, -13370, 32765, -4, -16818, -11636, -32761, -27014,
	-32323, 20440 };

static const neuton_sources_num_t MODEL_LINKS[] = {
	8, 14, 18, 26, 31, 56, 0, 14, 18, 30, 32, 56, 10, 24, 27, 41, 45, 54, 56,
	2, 5, 28, 29, 55, 56, 30, 36, 46, 47, 54, 56, 3, 6, 8, 12, 40, 56, 4, 13,
	15, 39, 44, 56, 17, 19, 26, 33, 36, 39, 56, 0, 4, 2, 31, 35, 56, 0, 4,
	10, 24, 26, 56, 0, 9, 56, 14, 29, 44, 47, 48, 56, 8, 11, 13, 29, 53, 56,
	4, 8, 4, 16, 54, 56, 4, 13, 56, 8, 36, 42, 47, 55, 56, 3, 8, 7, 10, 12,
	15, 56, 6, 16, 56, 2, 13, 37, 43, 55, 56, 8, 15, 4, 51, 55, 56, 9, 0, 1,
	16, 44, 56, 3, 7, 11, 27, 30, 31, 56, 3, 12, 30, 39, 55, 56, 0, 2, 12,
	20, 21, 56, 3, 11, 23, 26, 39, 56, 13, 0, 16, 18, 19, 41, 56, 11, 26, 28,
	45, 55, 56, 9, 8, 30, 45, 46, 56, 5, 15, 11, 28, 51, 56, 5, 0, 3, 29, 52,
	56, 23, 6, 18, 22, 23, 34, 56, 15, 21, 16, 32, 52, 53, 56, 3, 20, 26, 34,
	38, 50, 56, 6, 26, 35, 43, 46, 56, 27, 13, 24, 33, 35, 56, 0, 1, 18, 26,
	41, 56, 21, 24, 31, 28, 41, 56, 1, 8, 19, 20, 21, 22, 23, 24, 25, 26, 27,
	28, 29, 30, 31, 32, 33, 34, 35, 36, 56, 0, 1, 2, 3, 30, 25, 28, 56, 8,
	18, 13, 31, 52, 56, 26, 36, 2, 6, 11, 13, 56, 3, 0, 3, 7, 54, 56, 39, 3,
	18, 20, 29, 56, 3, 21, 31, 35, 36, 15, 56, 24, 33, 43, 13, 21, 56, 31,
	14, 22, 26, 41, 49, 56, 9, 26, 27, 33, 52, 56, 21, 41, 16, 27, 29, 56,
	8, 22, 35, 17, 48, 56, 39, 40, 9, 41, 48, 56, 3, 12, 38, 40, 42, 44, 45,
	46, 47, 48, 49, 56, 0, 1, 2, 3, 16, 56, 7, 18, 51, 56, 0, 1, 3, 4, 40,
	56, 5, 15, 41, 53, 56, 19, 22, 24, 28, 28, 54, 56, 2, 11, 39, 43, 55, 56 };

static const neuton_weights_num_t MODEL_INTERNAL_LINKS_BOUNDARIES[] = {
	0, 7, 12, 20, 25, 31, 38, 43, 52, 56, 64, 65, 72, 79, 85, 87, 94, 101,
	104, 110, 115, 120, 129, 137, 139, 146, 153, 159, 166, 171, 177, 185, 192,
	199, 204, 210, 218, 241, 247, 252, 258, 264, 270, 280, 285, 289, 297, 303,
	310, 315, 330, 336, 340, 346, 351, 356, 364 };

static const neuton_weights_num_t MODEL_EXTERNAL_LINKS_BOUNDARIES[] = {
	6, 12, 19, 25, 31, 37, 43, 50, 56, 62, 65, 71, 77, 83, 86, 92, 99, 102,
	108, 114, 120, 127, 133, 139, 145, 152, 158, 164, 170, 176, 183, 190, 197,
	203, 209, 215, 221, 242, 250, 256, 263, 269, 275, 282, 288, 295, 301, 307,
	313, 319, 331, 337, 341, 347, 352, 359, 365 };

static const neuton_coeff_t MODEL_ACTIVATION_COEFFS[] = {
	36466, 28656, 40930, 14844, 40932, 40957, 32231, 18089, 40932, 40959, 40768,
	23005, 40956, 40959, 20440, 40937, 40282, 20968, 28163, 39055, 40954, 40960,
	40960, 40959, 30710, 35758, 26589, 21225, 40960, 40957, 40953, 40959, 40960,
	30713, 40958, 40930, 40958, 40901, 30717, 40960, 28986, 40956, 40951, 40959,
	23056, 40959, 40320, 40956, 40922, 31105, 40957, 30538, 37023, 40932, 40958,
	36545, 40930 };

static const neuton_neurons_num_t MODEL_OUTPUT_NEURONS[] = {
	10, 37, 56, 50, 14, 54, 17, 52 };

